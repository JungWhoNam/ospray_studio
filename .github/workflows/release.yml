
name: OSPRay Studio Release

# XXX This uses FetchContent on the other components' release packages
# XXX not their devel branches.

# Controls when the workflow will run
on:
  push:
  #   branches: '**'
  # pull_request:
  #   branches: '**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  ## Linux
  # build-centos7:
  #   secrets: inherit
  #   uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
  #   with:
  #     image: centos:7
  #     cmd: |
  #       module load intel/2020.1
  #       export CC=icc
  #       export CXX=icpc
  #       export CXXFLAGS="-static-intel -fPIC -D_GLIBCXX_USE_CXX11_ABI=0"
  #       gitlab/build.sh
  #     artifact-out: build-centos7
  #     artifact-path: build

  # build-centos8:
  #   secrets: inherit
  #   uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
  #   with:
  #     image: centos:8
  #     cmd: gitlab/build.sh
  #     artifact-out: build-centos8
  #     artifact-path: build

  build-ubuntu18-04:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
    with:
      image: ubuntu:18.04
      cmd: gitlab/build.sh
      artifact-out: build-ubuntu18-04
      artifact-path: build

  # build-ubuntu20-04:
  #   secrets: inherit
  #   uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
  #   with:
  #     image: ubuntu:20.04
  #     cmd: gitlab/build.sh
  #     artifact-out: build-ubuntu20-04
  #     artifact-path: build

  # build-arch:
  #   secrets: inherit
  #   uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
  #   with:
  #     image: ospray/docker-images:arch
  #     cmd: gitlab/build.sh
  #     artifact-out: build-arch
  #     artifact-path: build
  
  # test-run-centos7:
  #   needs: build-centos7
  #   uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
  #   with:
  #     image: centos:7
  #     cmd: |
  #       build/install/bin/ospStudio --verify_install
  #     artifact-in: build-centos7

  test-run-ubuntu18-04:
    needs: build-ubuntu18-04
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
    with:
      image: ubuntu:18.04
      cmd: |
        gitlab/run.sh
      artifact-in: build-ubuntu18-04


  ## Windows
  build-windows-msvc15:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/windows.yml@main
    with:
      cmd: gitlab/win.ps1

  ## macOS
  build-macOS:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/macos.yml@main
    with:
      cmd: gitlab/macos.sh

  ## Scan Jobs ##
    ## Linux
    ## Windows
    ## macOS

  ### KW Jobs ###

  ## Release Jobs ##
    ## Linux
    ## Windows
    ## macOS

  ## Binary Scan Jobs ##
    ## Linux
    ## Windows
    ## macOS



###### Original main.yml kept for reference
#  # This workflow contains a single job called "build"
#  build:
#    # The type of runner that the job will run on
#    runs-on: [ Windows, build ]
#
#    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
#      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - uses: actions/checkout@v3
#
#      # Runs a single command using the runners shell
#      - name: Run a one-line script
#        run: echo Hello, world!
#
#      # Runs a set of commands using the runners shell
#      - name: Run a multi-line script
#        run: |
#          echo Add other actions to build,
#          echo test, and deploy your project.
#
