## Copyright 2009-2020 Intel Corporation
## SPDX-License-Identifier: Apache-2.0

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  OSPRAY_VER: "2.4.0"
  RKCOMMON_VER: "1.5.1"

stages:
  - build
  - test
  - scan

.build-linux:
  stage: build
  needs: []
  tags: [docker]

source-protex-scan:
  stage: scan
  image: amd64/openjdk:8
  script:
    - gitlab/source-scan-protex.sh
  tags: [docker]
  needs: []
  allow_failure: true

########
# These build phases will no longer work on current branches, due to non-release branch dependencies
########
build-ubuntu18.04:
  extends: .build-linux
  image: $DOCKER_REGISTRY/ospray/docker-images:ubuntu18.04
  script:
    - gitlab/build.sh
  artifacts:
    name: ospray-studio
    paths:
      - build/
  only:
    refs:
      - master, release-0.5.x

build-osx-clang:
  stage: build
  tags: [osx, clang]
  script:
    - gitlab/macos.sh
  artifacts:
    name: ospray-studio
    paths:
      - build-macos/
  only:
    refs:
      - master, release-0.5.x

build-windows-msvc15:
  stage: build
  tags: [win, msvc15]
  script:
    - gitlab\win.ps1 "Visual Studio 15 2017 Win64" "v141" "Release"
  artifacts:
    name: ospray-studio
    paths:
      - build-win/
  only:
    refs:
      - master, release-0.5.x

build-kw:
  extends: .build-linux
  image: $DOCKER_REGISTRY/ospray/docker-images:ubuntu18.04
  script:
    - gitlab/build-kw.sh
  artifacts:
    paths:
      - klockwork/*
  only:
    refs:
      - master, release-0.5.x

test-run-ubuntu18.04:
  stage: test
  image: $DOCKER_REGISTRY/ospray/docker-images:ubuntu18.04
  needs: [build-ubuntu18.04]
  tags: [docker]
  script:
    - gitlab/run.sh
  only:
    refs:
      - master, release-0.5.x

test-kw:
  stage: test
  tags: [docker]
  image: $DOCKER_REGISTRY/ospray/docker-images:ubuntu18.04
  needs: [build-kw]
  script:
    - gitlab/test-kw.sh
  allow_failure: true
  only:
    refs:
      - master, release-0.5.x

########
# Transitional phases, only works against devel branch dependencies
########
build-ubuntu18.04-dev:
  extends: .build-linux
  image: $DOCKER_REGISTRY/ospray/docker-images:ubuntu18.04
  script:
    - gitlab/build-dev.sh
  artifacts:
    name: ospray-studio
    paths:
      - build/

build-osx-clang-dev:
  stage: build
  tags: [osx, clang]
  script:
    - gitlab/macos-dev.sh
  artifacts:
    name: ospray-studio
    paths:
      - build-macos/

build-windows-msvc15-dev:
  stage: build
  tags: [win, msvc15]
  script:
    - gitlab\win-dev.ps1 "Visual Studio 15 2017 Win64" "v141" "Release"
  artifacts:
    name: ospray-studio
    paths:
      - build-win/

build-kw-dev:
  extends: .build-linux
  image: $DOCKER_REGISTRY/ospray/docker-images:ubuntu18.04
  script:
    - gitlab/build-kw-dev.sh
  artifacts:
    paths:
      - klocwork/*

test-kw-dev:
  stage: scan
  tags: [docker]
  image: $DOCKER_REGISTRY/ospray/docker-images:centos7
  needs: [build-kw-dev]
  script:
    - gitlab/kw-check-issues.sh
  allow_failure: true

kw-gen-report:
  stage: scan
  tags: [docker]
  image: $DOCKER_REGISTRY/ospray/docker-images:centos7
  needs: [build-kw-dev]
  script:
    - gitlab/kw-gen-report.sh
  artifacts:
    paths:
      - klocwork/report.log


test-run-ubuntu18.04-dev:
  stage: test
  image: $DOCKER_REGISTRY/ospray/docker-images:ubuntu18.04
  needs: [build-ubuntu18.04-dev]
  tags: [docker]
  script:
    - gitlab/run-dev.sh
